#version: "3.9"

services:
  model-service:
    build: ./model-service
    container_name: portfolio-model
    ports:
      - "8000:8000"
    env_file:
      - ./model-service/.env
    depends_on:
      - db
      - redis
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./model-service:/app

  review:
    build: ./review-service
    container_name: review-service
    ports:
      - "8001:8000"
    env_file:
      - ./review-service/.env
    depends_on:
      - db
      - review-db
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./review-service:/app
      - ./shared:/app/shared

  db:
    image: postgres:15
    container_name: portfolio-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: portfolio_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: portfolio-redis
    ports:
      - "6379:6379"
  
  review-db:
    image: postgres:15
    container_name: review-db
    restart: always
    environment:
      POSTGRES_USER: review_user
      POSTGRES_PASSWORD: review_password
      POSTGRES_DB: review_db
    ports:
      - "5433:5432"  # внешний порт 5433, чтобы не конфликтовал с основной БД
    volumes:
      - review_pgdata:/var/lib/postgresql/data

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8002:8000"
    env_file:
      - ./user-service/.env
    depends_on:
      - user-db
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./user-service:/app

  user-db:
    image: postgres:15
    container_name: user-db
    restart: always
    environment:
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_password
      POSTGRES_DB: user_db
    ports:
      - "5434:5432"
    volumes:
      - user_pgdata:/var/lib/postgresql/data

volumes:
  postgres_data:
  review_pgdata:
  user_pgdata:

